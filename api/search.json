[{"id":"0f709ae9d76437c23b8e3099e047f571","title":"api开放平台前端登录","content":"\n\napi开放平台前端登录\n\n\n\n\n\n\n\n\n src&#x2F;pages&#x2F;User&#x2F;Login&#x2F;index.tsx原\n12345678910111213141516171819202122232425262728293031323334// 提交表单const handleSubmit = async (values: API.UserLoginRequest) =&gt; &#123;  try &#123;    // 登录    const msg = await userLoginUsingPost(&#123; ...values, &#125;);    if (msg.status === &#x27;ok&#x27;) &#123;      // 登录成功      const defaultLoginSuccessMessage = intl.formatMessage(&#123;        id: &#x27;pages.login.success&#x27;,        defaultMessage: &#x27;登录成功！&#x27;,      &#125;);      message.success(defaultLoginSuccessMessage);      // 获取用户信息      await fetchUserInfo();      // 获取跳转地址      const urlParams = new URL(window.location.href).searchParams;      // 跳转到指定地址      history.push(urlParams.get(&#x27;redirect&#x27;) || &#x27;/&#x27;);      return;    &#125;    console.log(msg);    // 如果失败去设置用户错误信息    setUserLoginState(msg);  &#125; catch (error) &#123;    // 登录失败    const defaultLoginFailureMessage = intl.formatMessage(&#123;      id: &#x27;pages.login.failure&#x27;,      defaultMessage: &#x27;登录失败，请重试！&#x27;,    &#125;);    console.log(error);    message.error(defaultLoginFailureMessage);  &#125;&#125;;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n app.tsx\n123456789101112131415161718192021222324252627282930313233343536373839404142// 导出一个异步函数，用于获取初始状态export async function getInitialState(): Promise&lt;&#123;  settings?: Partial&lt;LayoutSettings&gt;;  currentUser?: API.CurrentUser;  loading?: boolean;  fetchUserInfo?: () =&gt; Promise&lt;API.CurrentUser | undefined&gt;;&#125;&gt; &#123;  // 定义一个异步函数，用于获取当前用户信息  const fetchUserInfo = async () =&gt; &#123;    try &#123;      // 调用queryCurrentUser函数，获取当前用户信息      const msg = await queryCurrentUser(&#123;        skipErrorHandler: true,      &#125;);      // 返回当前用户信息      return msg.data;    &#125; catch (error) &#123;      // 如果发生错误，跳转到登录页面      history.push(loginPath);    &#125;    // 返回undefined    return undefined;  &#125;;  // 如果不是登录页面，执行  const &#123; location &#125; = history;  if (location.pathname !== loginPath) &#123;    // 调用fetchUserInfo函数，获取当前用户信息    const currentUser = await fetchUserInfo();    // 返回初始状态    return &#123;      fetchUserInfo,      currentUser,      settings: defaultSettings as Partial&lt;LayoutSettings&gt;,    &#125;;  &#125;  // 返回初始状态  return &#123;    fetchUserInfo,    settings: defaultSettings as Partial&lt;LayoutSettings&gt;,  &#125;;&#125;\n\n12345request?: (params: U &amp; &#123;    pageSize?: number;    current?: number;    keyword?: string;&#125;, sort: Record&lt;string, SortOrder&gt;, filter: Record&lt;string, (string | number)[] | null&gt;) =&gt; Promise&lt;Partial&lt;RequestData&lt;DataSource&gt;&gt;&gt;;","slug":"api用户平台","date":"2024-11-12T02:10:49.000Z","categories_index":"","tags_index":"项目","author_index":"Crush"},{"id":"bc567916c4dc0d8169bd26d18e348d36","title":"test","content":"欢迎使用 Markdown 笔记这是首次使用 Markdown 笔记 自动生成的内容，包含 Markdown 语法和应用介绍\n表格 &amp; 文本样式\n\n\n样式\n语法\n示例\n\n\n\n加粗\n前后 ** 或  __\n加粗1 加粗2\n\n\n斜体\n前后 * 或  _\n斜体1 斜体2\n\n\n删除线\n前后 ~~\n删除线\n\n\n内联代码\n前后 &#96;\ncode\n\n\n下划线\n前 &lt;u&gt;  后 &lt;/u&gt;\n下划线\n\n\n高亮\n前后 ==\n&#x3D;&#x3D;高亮文本&#x3D;&#x3D;\n\n\n引用\n\n\n\n\n\n\n\n\nuTools 新一代效率工具平台\n链接鼠标右击 或 Ctrl 键 + 点击 系统默认浏览器打开链接\nuTools 官网  猿料社区\n图片拖放图片文件、粘贴截图可直接将图片源数据存储到笔记中\n\n图片可拖动为文件到任意窗口使用\n无序列表\n项目\n项目 1\n项目 A\n项目 B\n\n\n项目 2\n\n\n\n有序列表\n项目 1\n项目 A\n项目 B\n\n\n项目 2\n\n任务列表\n A 计划\n A1 计划\n A2 计划\n\n\n B 计划\n\n代码块代码块支持 168 种编程语言\n12345678910111213141516// javascript 冒泡排序function bubbleSort(array) &#123;  let swapped = true;  do &#123;    swapped = false;    for (let j = 0; j &lt; array.length; j++) &#123;      if (array[j] &gt; array[j + 1]) &#123;        let temp = array[j];        array[j] = array[j + 1];        array[j + 1] = temp;        swapped = true;      &#125;    &#125;  &#125; while (swapped);  return array;&#125;\n\nKaTeX 数学公式内联公式质能方程 $E&#x3D;mc^2$\n公式块$$\\displaystyle \\left( \\sum_{k&#x3D;1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k&#x3D;1}^n a_k^2 \\right) \\left( \\sum_{k&#x3D;1}^n b_k^2 \\right)$$\n应用介绍特性\n极佳的 Markdown 编辑体验，实时预览、存储\n与传统富文本编辑方式结合，支持通用快捷键\n导出 MD、html、PDF、图片\n可快速搜索全部笔记(内容和标题)\n笔记名称可设置为 uTools 关键字，外部快速打开笔记\n\n使用技巧\n侧边栏文件夹或笔记，拖拽调整位置，鼠标右击 显示操作菜单\n当焦点未在编辑器，键盘上下方向键、 Tab 键切换笔记\n当焦点未在编辑器，Enter 进入编辑\nCommand/Ctrl+F 焦点切换到搜索\n编辑器中列表编辑时，按 Tab 变子项，Shift + Tab 恢复\n\n","slug":"test","date":"2024-11-09T02:38:44.000Z","categories_index":"","tags_index":"test","author_index":"Crush"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post1$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server1$ hexo server\n\nMore info: Server\nGenerate static files1$ hexo generate\n\nMore info: Generating\nDeploy to remote sites1$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2024-11-07T16:24:53.067Z","categories_index":"","tags_index":"","author_index":"Crush"}]